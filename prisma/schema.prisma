generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(cuid())
  name         String
  email        String   @unique
  createdAt    DateTime @default(now())
  password     String
  referralCode String   @unique @default(cuid())
  referredBy   String?
  role         Role     @default(USER)
  updatedAt    DateTime @updatedAt
  orders       Order[]
  wallet       Wallet?
}

model Service {
  id          String            @id @default(uuid())
  name        String
  description String
  price       Float
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @default(now()) @updatedAt
  category    Category
  orders      Order[]
  providers   ServiceProvider[]
}

model Order {
  id        String   @id @default(cuid())
  userId    String
  serviceId String
  status    Status   @default(PENDING)
  date      DateTime
  time      String
  remarks   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  service   Service  @relation(fields: [serviceId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

model Wallet {
  id      String @id @default(cuid())
  balance Float  @default(0)
  userId  String @unique
  user    User   @relation(fields: [userId], references: [id])
}

model Partner {
  id        String            @id @default(cuid())
  name      String
  email     String            @unique
  password  String
  service   String[]
  approved  Boolean           @default(false)
  createdAt DateTime          @default(now())
  updatedAt DateTime          @updatedAt
  pincodes  PartnerPincode[]
  servicesPartner  ServiceProvider[]
}

model ServiceProvider {
  id        String  @id @default(cuid())
  serviceId String
  partnerId String
  partner   Partner @relation(fields: [partnerId], references: [id])
  service   Service @relation(fields: [serviceId], references: [id])
  @@unique([serviceId, partnerId])
}

model PartnerPincode {
  id        String  @id @default(cuid())
  partnerId String
  pincode   String
  partner   Partner @relation(fields: [partnerId], references: [id])

  @@unique([partnerId, pincode])
}

enum Role {
  USER
  ADMIN
  PARTNER
}

enum Status {
  PENDING
  COMPLETED
  CANCELLED
}

enum Category {
  AC_SERVICE
  BATHROOM_KITCHEN_CLEANING
  CARPENTER
  CHIMNEY_REPAIR
  ELECTRICIAN
  MICROWAVE_REPAIR
  PLUMBERS
  REFRIGERATOR_REPAIR
  SOFA_CARPET_CLEANING
  WASHING_MACHINE_REPAIR
  WATER_PURIFIER_REPAIR
}
